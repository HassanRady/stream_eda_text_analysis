AWSTemplateFormatVersion: 2010-09-09

Description: This template create an Application Load Balancer

Parameters:
  ExportResourcesStack:
    Description: The name of the resources stack that exports values
    Type: String
    Default: resources
  LoadBalancerName:
    Type: String
    Default: MyApplicationLoadBalancer

Resources:
  ApplicationLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable all traffic
      VpcId: 
        Fn::ImportValue: !Sub ${ExportResourcesStack}-VPC
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Ref LoadBalancerName
      Subnets:
        - Fn::ImportValue: !Sub ${ExportResourcesStack}-PublicSubnet1
        - Fn::ImportValue: !Sub ${ExportResourcesStack}-PublicSubnet2
      SecurityGroups: 
        - !Ref ApplicationLoadBalancerSecurityGroup
  ALBListenerNoSslCertificate:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
          - Type: forward
            TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP
  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 6
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      TargetType: ip
      UnhealthyThresholdCount: 2
      VpcId:
        Fn::ImportValue: !Sub ${ExportResourcesStack}-VPC

Outputs:
  ALBSecurityGroup:
    Description: ALB Security Group
    Export:
      Name: !Sub ${AWS::StackName}-ALBSecurityGroup
    Value: !Ref ApplicationLoadBalancerSecurityGroup

  ALBTargetGroup:
    Description: Webserver target group
    Export:
      Name: !Sub ${AWS::StackName}-ALBTargetGroup
    Value: !Ref ALBTargetGroup

  ApplicationLoadBalancerDnsName:
    Description: Application Load Balancer DNS Name
    Export:
      Name: !Sub ${AWS::StackName}-ApplicationLoadBalancerDnsName
    Value: !GetAtt ApplicationLoadBalancer.DNSName

  ApplicationLoadBalancerZoneID:
    Description: Application Load Balancer Canonical Hosted Zone ID
    Export:
      Name: !Sub ${AWS::StackName}-ApplicationLoadBalancerZoneID
    Value: !GetAtt ApplicationLoadBalancer.CanonicalHostedZoneID
    

